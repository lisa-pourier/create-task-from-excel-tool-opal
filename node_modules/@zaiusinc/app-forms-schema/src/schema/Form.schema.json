{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "definitions": {
    "AnyElement": {
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "toggle",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/ToggleField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "select",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/SelectField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "multi_select",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/MultiSelectField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "text",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/TextField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "secret",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/SecretField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "button",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/Button"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "link_button",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/LinkButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "oauth_button",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/OAuthButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "oauth_image_button",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/OAuthImageButton"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "file",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/FileField"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "divider",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/DividerElement"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "instructions",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/ParagraphElement"
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "callout",
                "type": "string"
              }
            }
          },
          "then": {
            "$ref": "#/definitions/CalloutElement"
          }
        }
      ],
      "properties": {
        "type": {
          "enum": [
            "toggle",
            "select",
            "multi_select",
            "text",
            "secret",
            "button",
            "link_button",
            "oauth_button",
            "oauth_image_button",
            "file",
            "divider",
            "instructions",
            "callout"
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AppDataSource": {
      "additionalProperties": false,
      "properties": {
        "function": {
          "type": "string"
        },
        "method": {
          "const": "GET",
          "type": "string"
        },
        "type": {
          "const": "app",
          "type": "string"
        }
      },
      "required": [
        "type",
        "function"
      ],
      "type": "object"
    },
    "Button": {
      "additionalProperties": false,
      "properties": {
        "action": {
          "type": "string"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "style": {
          "enum": [
            "primary",
            "none",
            "danger"
          ],
          "type": "string"
        },
        "type": {
          "const": "button",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "action",
        "label",
        "type"
      ],
      "type": "object"
    },
    "CalloutElement": {
      "additionalProperties": false,
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "intent": {
          "enum": [
            "info",
            "success",
            "warning",
            "danger"
          ],
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "const": "callout",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "intent",
        "text",
        "type"
      ],
      "type": "object"
    },
    "Comparator": {
      "anyOf": [
        {
          "$ref": "#/definitions/EqualsComparator"
        },
        {
          "$ref": "#/definitions/EmptyComparator"
        },
        {
          "$ref": "#/definitions/RegexComparator"
        },
        {
          "$ref": "#/definitions/FeatureFlagComparator"
        }
      ],
      "description": "One and only one of empty, regex, or equals is required"
    },
    "DataSource": {
      "anyOf": [
        {
          "$ref": "#/definitions/AppDataSource"
        },
        {
          "$ref": "#/definitions/HttpDataSource"
        }
      ]
    },
    "DividerElement": {
      "additionalProperties": false,
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "key": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "divider",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "EmptyComparator": {
      "additionalProperties": false,
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "empty"
      ],
      "type": "object"
    },
    "EqualsComparator": {
      "additionalProperties": false,
      "properties": {
        "equals": {
          "type": [
            "string",
            "number",
            "boolean"
          ]
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "equals"
      ],
      "type": "object"
    },
    "Evaluation": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "$ref": "#/definitions/Comparator"
        },
        {
          "$ref": "#/definitions/ListComparator"
        },
        {
          "$ref": "#/definitions/Predicate"
        }
      ]
    },
    "FeatureFlagComparator": {
      "additionalProperties": false,
      "properties": {
        "hasFeatureFlag": {
          "type": "string"
        }
      },
      "required": [
        "hasFeatureFlag"
      ],
      "type": "object"
    },
    "FieldValidation": {
      "anyOf": [
        {
          "$ref": "#/definitions/RegexFieldValidation"
        },
        {
          "$ref": "#/definitions/PredicateFieldValidation"
        }
      ]
    },
    "FileField": {
      "additionalProperties": false,
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/FormValue"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "extensions": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "help": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "maxSize": {
          "type": "number"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "file",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "extensions",
        "help",
        "key",
        "label",
        "maxSize",
        "type"
      ],
      "type": "object"
    },
    "FormValue": {
      "anyOf": [
        {
          "$ref": "#/definitions/PrimitiveFormValue"
        },
        {
          "$ref": "#/definitions/RedactedData"
        },
        {
          "$ref": "#/definitions/FormValueList"
        }
      ]
    },
    "FormValueList": {
      "items": {
        "$ref": "#/definitions/PrimitiveFormValue"
      },
      "type": "array"
    },
    "HttpDataSource": {
      "additionalProperties": false,
      "properties": {
        "method": {
          "const": "GET",
          "type": "string"
        },
        "type": {
          "const": "http",
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "url"
      ],
      "type": "object"
    },
    "LinkButton": {
      "additionalProperties": false,
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "style": {
          "enum": [
            "primary",
            "none",
            "danger"
          ],
          "type": "string"
        },
        "type": {
          "const": "link_button",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "href",
        "label",
        "type"
      ],
      "type": "object"
    },
    "ListComparator": {
      "anyOf": [
        {
          "$ref": "#/definitions/ListEqualsComparator"
        },
        {
          "$ref": "#/definitions/ListEmptyComparator"
        },
        {
          "$ref": "#/definitions/ListRegexComparator"
        },
        {
          "$ref": "#/definitions/ListFeatureFlagComparator"
        }
      ]
    },
    "ListEmptyComparator": {
      "additionalProperties": false,
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "operation": {
          "enum": [
            "all",
            "any",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "empty",
        "key",
        "operation"
      ],
      "type": "object"
    },
    "ListEqualsComparator": {
      "additionalProperties": false,
      "properties": {
        "equals": {
          "type": [
            "string",
            "number",
            "boolean"
          ]
        },
        "key": {
          "type": "string"
        },
        "operation": {
          "enum": [
            "all",
            "any",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "equals",
        "key",
        "operation"
      ],
      "type": "object"
    },
    "ListFeatureFlagComparator": {
      "additionalProperties": false,
      "properties": {
        "hasFeatureFlag": {
          "type": "string"
        },
        "operation": {
          "enum": [
            "all",
            "any",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "hasFeatureFlag",
        "operation"
      ],
      "type": "object"
    },
    "ListRegexComparator": {
      "additionalProperties": false,
      "properties": {
        "flags": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operation": {
          "enum": [
            "all",
            "any",
            "none"
          ],
          "type": "string"
        },
        "regex": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "operation",
        "regex"
      ],
      "type": "object"
    },
    "MultiSelectField": {
      "additionalProperties": false,
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "defaultValue": {
          "$ref": "#/definitions/FormValue"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "display": {
          "enum": [
            "auto",
            "checkbox",
            "select"
          ],
          "type": "string"
        },
        "help": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/SelectOption"
          },
          "type": "array"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "triggerAction": {
          "type": "string"
        },
        "type": {
          "const": "multi_select",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "help",
        "key",
        "label",
        "type"
      ],
      "type": "object"
    },
    "OAuthButton": {
      "additionalProperties": false,
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "iconPosition": {
          "enum": [
            "left",
            "right"
          ],
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "style": {
          "enum": [
            "primary",
            "none",
            "danger"
          ],
          "type": "string"
        },
        "type": {
          "const": "oauth_button",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "label",
        "type"
      ],
      "type": "object"
    },
    "OAuthImageButton": {
      "additionalProperties": false,
      "properties": {
        "alternateText": {
          "type": "string"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "disabledImage": {
          "type": "string"
        },
        "focusImage": {
          "type": "string"
        },
        "help": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "normalImage": {
          "type": "string"
        },
        "pressedImage": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "oauth_image_button",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "disabledImage",
        "focusImage",
        "normalImage",
        "pressedImage",
        "type"
      ],
      "type": "object"
    },
    "ParagraphElement": {
      "additionalProperties": false,
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "key": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "text": {
          "type": "string"
        },
        "type": {
          "const": "instructions",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "text",
        "type"
      ],
      "type": "object"
    },
    "Predicate": {
      "additionalProperties": false,
      "description": "Leaves of the Predicate tree must be Comparators",
      "properties": {
        "comparators": {
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/Comparator"
              },
              {
                "$ref": "#/definitions/ListComparator"
              },
              {
                "$ref": "#/definitions/Predicate"
              }
            ]
          },
          "type": "array"
        },
        "operation": {
          "enum": [
            "all",
            "any",
            "none"
          ],
          "type": "string"
        }
      },
      "required": [
        "operation",
        "comparators"
      ],
      "type": "object"
    },
    "PredicateFieldValidation": {
      "additionalProperties": false,
      "properties": {
        "message": {
          "type": "string"
        },
        "predicate": {
          "$ref": "#/definitions/Predicate"
        }
      },
      "required": [
        "predicate",
        "message"
      ],
      "type": "object"
    },
    "PrimitiveFormValue": {
      "type": [
        "string",
        "number",
        "boolean",
        "null"
      ]
    },
    "RedactedData": {
      "additionalProperties": false,
      "properties": {
        "redacted": {
          "const": true,
          "type": "boolean"
        }
      },
      "required": [
        "redacted"
      ],
      "type": "object"
    },
    "RegexComparator": {
      "additionalProperties": false,
      "properties": {
        "flags": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        }
      },
      "required": [
        "key",
        "regex"
      ],
      "type": "object"
    },
    "RegexFieldValidation": {
      "additionalProperties": false,
      "properties": {
        "flags": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "regex": {
          "type": "string"
        }
      },
      "required": [
        "regex",
        "message"
      ],
      "type": "object"
    },
    "SecretField": {
      "additionalProperties": false,
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/FormValue"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "secret",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "help",
        "key",
        "label",
        "type"
      ],
      "type": "object"
    },
    "Section": {
      "additionalProperties": false,
      "description": "Sections are individual accordions on a form Form data is submitted by section | not as a whole",
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation",
          "description": "An Evaluation that determines if the section should be disabled (and therefore closed)"
        },
        "elements": {
          "description": "A list of the elements to display on the form",
          "items": {
            "$ref": "#/definitions/AnyElement"
          },
          "type": "array"
        },
        "key": {
          "description": "The section key, where the form data will be stored/access in the settings store",
          "type": "string"
        },
        "label": {
          "description": "The label/title of the form section",
          "type": "string"
        },
        "properties": {
          "description": "Additional property names (like a field key) that will have data stored along side the form data and can be used in predicates throughout the form sections",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "form",
          "description": "The section type, e.g., zed or form (default is form if left empty)",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation",
          "description": "An Evaluation that determines if the section should be visible at all"
        },
        "zaiusAdminOnly": {
          "description": "For Optimizely internal use only. If true, the form section will only be visible to ODP Admins and Customer Support",
          "type": "boolean"
        }
      },
      "required": [
        "key",
        "label",
        "elements"
      ],
      "type": "object"
    },
    "SelectField": {
      "additionalProperties": false,
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "defaultValue": {
          "$ref": "#/definitions/FormValue"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "display": {
          "enum": [
            "auto",
            "radio",
            "select"
          ],
          "type": "string"
        },
        "help": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/SelectOption"
          },
          "type": "array"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "triggerAction": {
          "type": "string"
        },
        "type": {
          "const": "select",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "help",
        "key",
        "label",
        "type"
      ],
      "type": "object"
    },
    "SelectOption": {
      "additionalProperties": false,
      "properties": {
        "text": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/PrimitiveFormValue"
        }
      },
      "required": [
        "text",
        "value"
      ],
      "type": "object"
    },
    "TextField": {
      "additionalProperties": false,
      "properties": {
        "dataType": {
          "enum": [
            "text",
            "number",
            "email",
            "phone"
          ],
          "type": "string"
        },
        "defaultValue": {
          "$ref": "#/definitions/FormValue"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "hint": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "multiline": {
          "type": "boolean"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "text",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "help",
        "key",
        "label",
        "type"
      ],
      "type": "object"
    },
    "ToggleField": {
      "additionalProperties": false,
      "properties": {
        "defaultValue": {
          "type": "boolean"
        },
        "disabled": {
          "$ref": "#/definitions/Evaluation"
        },
        "help": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "readonly": {
          "$ref": "#/definitions/Evaluation"
        },
        "required": {
          "$ref": "#/definitions/Evaluation"
        },
        "type": {
          "const": "toggle",
          "type": "string"
        },
        "validations": {
          "items": {
            "$ref": "#/definitions/FieldValidation"
          },
          "type": "array"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation"
        }
      },
      "required": [
        "help",
        "key",
        "label",
        "type"
      ],
      "type": "object"
    },
    "ZedSection": {
      "additionalProperties": false,
      "description": "Sections are individual accordions on a form Form data is submitted by section | not as a whole",
      "properties": {
        "disabled": {
          "$ref": "#/definitions/Evaluation",
          "description": "An Evaluation that determines if the section should be disabled (and therefore closed)"
        },
        "key": {
          "description": "The section key, where the form data will be stored/access in the settings store",
          "type": "string"
        },
        "label": {
          "description": "The label/title of the form section. If an empty string, the section will not be collapsible.",
          "type": "string"
        },
        "mode": {
          "$ref": "#/definitions/ZedType",
          "description": "The mode of Zed, e.g., ZedType.Email"
        },
        "properties": {
          "description": "Additional property names (like a field key) that will have data stored along side the form data and can be used in predicates throughout the form sections",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "const": "zed",
          "description": "The section type, e.g., zed or form (default is form if left empty)",
          "type": "string"
        },
        "visible": {
          "$ref": "#/definitions/Evaluation",
          "description": "An Evaluation that determines if the section should be visible at all"
        }
      },
      "required": [
        "key",
        "label",
        "type",
        "mode"
      ],
      "type": "object"
    },
    "ZedType": {
      "const": "email",
      "type": "string"
    }
  },
  "properties": {
    "sections": {
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/Section"
          },
          {
            "$ref": "#/definitions/ZedSection"
          }
        ]
      },
      "type": "array"
    }
  },
  "required": [
    "sections"
  ],
  "type": "object"
}