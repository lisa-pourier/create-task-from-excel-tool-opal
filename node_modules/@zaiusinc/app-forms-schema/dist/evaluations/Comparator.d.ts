/**
 * One and only one of empty, regex, or equals is required
 */
export type Comparator = EqualsComparator | EmptyComparator | RegexComparator | FeatureFlagComparator;
export interface EqualsComparator {
    key: string;
    empty?: never;
    regex?: never;
    flags?: never;
    equals: string | number | boolean;
    hasFeatureFlag?: never;
}
export interface EmptyComparator {
    key: string;
    empty: boolean;
    regex?: never;
    flags?: never;
    equals?: never;
    hasFeatureFlag?: never;
}
export interface RegexComparator {
    key: string;
    empty?: never;
    regex: string;
    flags?: string;
    equals?: never;
    hasFeatureFlag?: never;
}
export interface FeatureFlagComparator {
    key?: never;
    empty?: never;
    regex?: never;
    flags?: never;
    equals?: never;
    hasFeatureFlag: string;
}
export type ListComparator = ListEqualsComparator | ListEmptyComparator | ListRegexComparator | ListFeatureFlagComparator;
export interface ListEqualsComparator extends EqualsComparator {
    operation: 'all' | 'any' | 'none';
}
export interface ListEmptyComparator extends EmptyComparator {
    operation: 'all' | 'any' | 'none';
}
export interface ListRegexComparator extends RegexComparator {
    operation: 'all' | 'any' | 'none';
}
export interface ListFeatureFlagComparator extends FeatureFlagComparator {
    operation: 'all' | 'any' | 'none';
}
//# sourceMappingURL=Comparator.d.ts.map