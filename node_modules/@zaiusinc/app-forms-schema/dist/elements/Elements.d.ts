import { Evaluation } from '../evaluations';
import { Button, LinkButton, OAuthImageButton } from './';
import { CalloutElement } from './CalloutElement';
import { DividerElement } from './DividerElement';
import { FileField, MultiSelectField, SecretField, SelectField, TextField, ToggleField } from './fields';
import { ParagraphElement } from './ParagraphElement';
import { OAuthButton } from './OAuthButton';
export declare enum ElementType {
    Toggle = "toggle",
    Select = "select",
    MultiSelect = "multi_select",
    Text = "text",
    Secret = "secret",
    Button = "button",
    LinkButton = "link_button",
    OAuthButton = "oauth_button",
    OAuthImageButton = "oauth_image_button",
    File = "file",
    Divider = "divider",
    Instructions = "instructions",
    Callout = "callout"
}
export interface FormElement {
    key?: string;
    type: ElementType;
    visible?: Evaluation;
    disabled?: Evaluation;
    readonly?: Evaluation;
}
export interface NonFieldElement extends FormElement {
    readonly?: never;
}
/**
 * @discriminator type
 */
export type AnyElement = ToggleField | SelectField | MultiSelectField | TextField | SecretField | Button | LinkButton | OAuthButton | OAuthImageButton | FileField | DividerElement | ParagraphElement | CalloutElement;
//# sourceMappingURL=Elements.d.ts.map