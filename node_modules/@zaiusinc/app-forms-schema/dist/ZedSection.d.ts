import { Evaluation } from './evaluations';
import { SectionType } from './Section';
export declare enum ZedType {
    Email = "email"
}
/**
 * Sections are individual accordions on a form
 * Form data is submitted by section | not as a whole
 */
export interface ZedSection {
    /**
     * The section key, where the form data will be stored/access in the settings store
     */
    key: string;
    /**
     * The label/title of the form section. If an empty string, the section will not be collapsible.
     */
    label: string;
    /**
     * An Evaluation that determines if the section should be visible at all
     */
    visible?: Evaluation;
    /**
     * An Evaluation that determines if the section should be disabled (and therefore closed)
     */
    disabled?: Evaluation;
    /**
     * The section type, e.g., zed or form (default is form if left empty)
     */
    type: SectionType.Zed;
    /**
     * The mode of Zed, e.g., ZedType.Email
     */
    mode: ZedType;
    /**
     * Additional property names (like a field key) that will have data stored along side the form data
     * and can be used in predicates throughout the form sections
     */
    properties?: string[];
}
//# sourceMappingURL=ZedSection.d.ts.map