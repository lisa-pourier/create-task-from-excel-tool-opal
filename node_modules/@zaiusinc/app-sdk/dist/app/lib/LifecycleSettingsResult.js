"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LifecycleSettingsResult = void 0;
const FormResult_1 = require("./FormResult");
/**
 * Used to compose a response to the onSettingsForm lifecycle request
 */
class LifecycleSettingsResult extends FormResult_1.FormResult {
    redirectValue;
    redirectMode;
    /**
     * Add an error to display to the user for a particular form field (implicitly scoped to the submitted section)
     * @param field key to display the error under, as defined in the form schema
     * @param error message to display to the user
     */
    addError(field, error) {
        return this.addErrorInternal(field, error);
    }
    /**
     * Redirect the user to another page, such as for an OAuth flow. Calling this method will override any value
     * previously set by {@link redirectToSettings}.
     * @param url the destination URL for the redirect (location header)
     */
    redirect(url) {
        this.redirectValue = url;
        this.redirectMode = 'url';
        return this;
    }
    /**
     * Redirect the user to a particular section of the settings form. Calling this method will override any value
     * previously set by {@link redirect}.
     * @param section to open
     */
    redirectToSettings(section) {
        this.redirectValue = section;
        this.redirectMode = 'settings';
        return this;
    }
    /**
     * @hidden
     * Used internally to get the complete response
     */
    getResponse(section) {
        const errors = {};
        for (const field of Object.keys(this.errors)) {
            errors[`${section}.${field}`] = this.errors[field];
        }
        return {
            errors,
            toasts: this.toasts,
            redirect: this.redirectValue,
            redirectMode: this.redirectMode
        };
    }
}
exports.LifecycleSettingsResult = LifecycleSettingsResult;
//# sourceMappingURL=LifecycleSettingsResult.js.map