import { BaseKVStore, PatchUpdater, ValueHash } from './BaseKVStore';
import { LocalAsyncStoreBackend } from './LocalAsyncStoreBackend';
/**
 * @hidden
 * A stub of the key value store
 *
 * @TODO implement the stub for local development purposes
 */
export declare class LocalStore implements BaseKVStore<ValueHash, true> {
    private store;
    constructor(store: LocalAsyncStoreBackend<ValueHash>);
    reset(): void;
    get<T extends ValueHash>(key: string, fields?: string[]): Promise<T>;
    put(key: string, value?: ValueHash): Promise<true>;
    patch<T extends ValueHash>(key: string, value?: ValueHash | PatchUpdater): Promise<T>;
    delete(key: string, fields?: string[]): Promise<true>;
    exists(key: string): Promise<boolean>;
    private filter;
    private patchWithRetry;
}
//# sourceMappingURL=LocalStore.d.ts.map