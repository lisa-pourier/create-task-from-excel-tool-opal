import { FileReadableStreamBuilder, FileRowProcessor, FileStream } from './FileStream';
import { Options } from './JsonLinesParser';
type JsonLineRowBasics = string | number | boolean | Date | JsonLineRow;
export interface JsonLineRow {
    [column: string]: JsonLineRowBasics | JsonLineRowBasics[];
}
/**
 * Builds source streams for the JsonLinesStream to process.
 */
export type JsonLineReadableStreamBuilder = FileReadableStreamBuilder;
export declare class JsonLinesStream<T> extends FileStream<T, Options> {
    /**
     * Build a JsonLinesStream from an existing ReadableStream.
     * @param stream source stream for the JsonLines data
     * @param processor the row processor
     * @param options options to provide the JsonLinesParser {@link Options}
     */
    static fromStream<T>(stream: NodeJS.ReadableStream, processor: FileRowProcessor<T>, options?: Options): JsonLinesStream<T>;
    /**
     * Build a JsonLinesStream that reads from a web resource.
     * @param url source url for the JsonLines data
     * @param processor the row processor
     * @param options options to provide the JsonLinesParser {@link Options}
     */
    static fromUrl<T>(url: string, processor: FileRowProcessor<T>, options?: Options): JsonLinesStream<T>;
    constructor(streamBuilder: JsonLineReadableStreamBuilder, rowProcessor: FileRowProcessor<T>, options?: Options);
}
export {};
//# sourceMappingURL=JsonLinesStream.d.ts.map