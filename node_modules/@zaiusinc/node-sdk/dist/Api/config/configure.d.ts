import { RequestInterceptor } from './RequestInterceptor';
export interface Config {
    /**
     * The public or private API key for making v3 API requests.
     * The public API key is usually the ODP tracker ID for the account.
     * If you need to make calls to private APIs, this must be a private API key.
     */
    apiKey: string;
    /**
     * The base path for the API.
     * The value depends on the region of the ODP account.
     * The current list of supported regions can be find in [the ODP documentation](https://docs.developers.optimizely.com/optimizely-data-platform/reference/introduction#rest-api).
     *
     * The SDK tries to determine the base path from the API key, but you can override it by setting this value.
     */
    apiBasePath?: string;
}
/**
 * @hidden
 */
export interface InternalConfig extends Config {
    apiBasePath: string;
    apiKey: string;
    requestInterceptor?: RequestInterceptor;
    appContext?: AppContext;
}
/**
 * @hidden
 * preferably removed when no longer needed
 */
export interface AppContext {
    app_id: string;
    display_name: string;
    version: string;
    vendor: string;
}
/**
 * @hidden
 *
 * @param newConfig the configuration to use going forward or null to restore defaults
 */
export declare function configOrDefault(newConfig: Config | InternalConfig | null): InternalConfig;
/**
 * @hidden
 *
 */
export declare function getModuleOrGlobalConfig(): InternalConfig;
/**
 * @hidden
 *
 * @param newConfig the configuration to use going forward or null to restore defaults
 */
export declare function setModuleScopedConfig(config: Config | InternalConfig | null): void;
/**
 * @hidden
 *
 * Clears the module scoped configuration
 */
export declare function clearModuleScopedConfig(): void;
//# sourceMappingURL=configure.d.ts.map