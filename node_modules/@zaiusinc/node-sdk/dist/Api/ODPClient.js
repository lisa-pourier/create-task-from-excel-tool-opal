"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ODPClient = void 0;
const ApiV3_1 = require("./lib/ApiV3");
const IdentifierApi_1 = require("./IdentifierApi");
const SchemaApi_1 = require("./SchemaApi");
const ListsApi_1 = require("./ListsApi");
const event_1 = require("./Events/event");
const customer_1 = require("./Customers/customer");
const object_1 = require("./Objects/object");
const graphql_1 = require("./GraphQL/graphql");
class ODPClient {
    /**
     * Manage schema (ODP domain objects and fields) using the v3 APIs
     */
    schema;
    /**
     * Manage customer identifiers using the v3 APIs
     */
    identifier;
    /**
     * Manage list subscriptions using the v3 APIs
     */
    list;
    /**
     * Direct access to query any API by path using the v3 API helper
     */
    v3Api;
    constructor(config = null) {
        this.v3Api = new ApiV3_1.ApiV3.API(config);
        this.identifier = new IdentifierApi_1.IdentifierApi(this);
        this.schema = new SchemaApi_1.SchemaApi(this);
        this.list = new ListsApi_1.ListsApi(this);
    }
    /**
     * Send an event to ODP using the v3 event API
     */
    event = (payload) => (0, event_1.event)(this.v3Api, payload);
    /**
     * Create or Update a customer profile in ODP using the v3 profiles API
     */
    customer = (payload, opts) => (0, customer_1.customer)(this.v3Api, payload, opts);
    /**
     * Create or Update an object in ODP using the v3 objects API
     */
    object = (type, payload, opts) => (0, object_1.object)(this.v3Api, type, payload, opts);
    /**
     * Query data using the GraphQL API
     */
    graphql = (query, variables) => (0, graphql_1.graphql)(this.v3Api, query, variables);
}
exports.ODPClient = ODPClient;
//# sourceMappingURL=ODPClient.js.map