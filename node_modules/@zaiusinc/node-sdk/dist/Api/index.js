"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Zaius = exports.z = exports.ODP = exports.odp = exports.ODPClient = exports.ReconfigurableODPClient = void 0;
const Zaius = __importStar(require("./Types"));
exports.Zaius = Zaius;
const ODP = __importStar(require("./Types"));
exports.ODP = ODP;
const configure_1 = require("./config/configure");
const ODPClient_1 = require("./ODPClient");
Object.defineProperty(exports, "ODPClient", { enumerable: true, get: function () { return ODPClient_1.ODPClient; } });
/**
 * An extension of ODPClient that allows changing the configuration after the client has been created.
 * The purpose of this class is to allow managing module scoped instance of OCPClient.
 */
class ReconfigurableODPClient extends ODPClient_1.ODPClient {
    /**
     * Configure the ODP SDK for use
     *
     */
    configure(config) {
        (0, configure_1.setModuleScopedConfig)(config);
    }
}
exports.ReconfigurableODPClient = ReconfigurableODPClient;
/**
 * Module scoped way of utilizing the ODP Node SDK.
 * @usage
 * ```
 *
 * import {odp} from '@zaiusinc/node-sdk';
 *
 * // Send an event to ODP
 * await odp.event(...);
 * // Subscribe a customer by an identifier to a list
 * await odp.list.subscribe(...);
 * // etc
 * ```
 */
exports.odp = new ReconfigurableODPClient();
/**
 * For backward compatibility
 */
exports.z = exports.odp;
//# sourceMappingURL=index.js.map