"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PayloadSanitizer_1 = require("./PayloadSanitizer");
describe('PayloadSanitizer', () => {
    describe('sanitize', () => {
        let fixture = {};
        beforeEach(() => (fixture = {
            empty: '',
            blank: '   ',
            nullified: null,
            value: 'value'
        }));
        it('by default should trimToNull and excludeNulls', () => {
            PayloadSanitizer_1.PayloadSanitizer.sanitize(fixture);
            expect(fixture).toEqual({ value: 'value' });
        });
        it('should trimToNull and not excludeNulls', () => {
            PayloadSanitizer_1.PayloadSanitizer.sanitize(fixture, { excludeNulls: false });
            expect(fixture).toEqual({
                empty: null,
                blank: null,
                nullified: null,
                value: 'value'
            });
        });
        it('should not trimToNull but should excludeNulls', () => {
            PayloadSanitizer_1.PayloadSanitizer.sanitize(fixture, { trimToNull: false });
            expect(fixture).toEqual({
                empty: '',
                blank: '   ',
                value: 'value'
            });
        });
        it('should not trimToNull or excludeNulls', () => {
            PayloadSanitizer_1.PayloadSanitizer.sanitize(fixture, { trimToNull: false, excludeNulls: false });
            expect(fixture).toEqual({
                empty: '',
                blank: '   ',
                nullified: null,
                value: 'value'
            });
        });
    });
});
//# sourceMappingURL=PayloadSanitizer.test.js.map