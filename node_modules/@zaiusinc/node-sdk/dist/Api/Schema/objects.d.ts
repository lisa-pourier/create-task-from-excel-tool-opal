import { ApiV3 } from '../lib/ApiV3';
import { ObjectDefinition } from '../Types';
/**
 * Gets the definition of an ODP object.
 * @param apiV3 the v3 API instance to use
 * @param name the object name
 * @throws {ApiObjectNotFoundError} if there is no object with the given name
 * @throws {HttpError} if it receives any other non-2XX result
 */
export declare function getObject(apiV3: ApiV3.API, name: string): Promise<ApiV3.HttpResponse<ObjectDefinition>>;
/**
 * Gets the definitions of all ODP objects.
 * @param apiV3 the v3 API instance to use
 * @throws {HttpError} if it receives a non-2XX result
 */
export declare function getAllObjects(apiV3: ApiV3.API): Promise<ApiV3.HttpResponse<ObjectDefinition[]>>;
/**
 * Create a custom ODP object
 * @param apiV3 the v3 API instance to use
 * @param object the object to create
 * @throws {ApiObjectExistsError} if the object name already exists
 * @throws {HttpError} if it receives any other non-2XX result
 */
export declare function createObject(apiV3: ApiV3.API, object: ObjectDefinition): Promise<ApiV3.HttpResponse<ObjectDefinition>>;
//# sourceMappingURL=objects.d.ts.map