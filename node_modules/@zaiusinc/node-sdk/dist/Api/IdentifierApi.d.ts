import { Identifier } from './Identifiers';
import { ApiV3 } from './lib/ApiV3';
import { ConsentUpdate, GetConsentResponse, GetReachabilityResponse, IdentifierMetadata, IdentifierMetadataResponse, ReachabilityUpdate } from './Types';
import { ODPClient } from './index';
export declare class IdentifierApi implements Identifier {
    private client;
    constructor(client: ODPClient);
    getConsent(identifierName: string, identifierValue: string): Promise<ApiV3.HttpResponse<GetConsentResponse>>;
    getMetadata: (identifierFieldName: string, identifierValue: string) => Promise<ApiV3.HttpResponse<IdentifierMetadataResponse>>;
    getReachability: (identifierName: string, value: string) => Promise<ApiV3.HttpResponse<GetReachabilityResponse>>;
    updateConsent: (updates: ConsentUpdate | ConsentUpdate[]) => Promise<ApiV3.HttpResponse<ApiV3.V3SuccessResponse>>;
    updateMetadata: (updates: IdentifierMetadata | IdentifierMetadata[]) => Promise<ApiV3.HttpResponse<ApiV3.V3SuccessResponse>>;
    updateReachability: (updates: ReachabilityUpdate | ReachabilityUpdate[]) => Promise<ApiV3.HttpResponse<ApiV3.V3SuccessResponse>>;
}
//# sourceMappingURL=IdentifierApi.d.ts.map